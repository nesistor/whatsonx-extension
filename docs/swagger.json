{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API for scheduling meetings and managing users/groups using Google Calendar.",
        "title": "Calendar Meeting Scheduler API",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "email": "karolmalicki.001@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:80",
    "basePath": "/",
    "paths": {
        "/add-user": {
            "post": {
                "description": "Redirects the user to Google OAuth2 authorization page to allow app access.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Initiates user authorization",
                "responses": {
                    "200": {
                        "description": "User authorization link",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error initiating authorization",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/check-availability": {
            "get": {
                "description": "Retrieves free slots from the user's Google Calendar within a given time range.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Check user calendar availability",
                "responses": {
                    "200": {
                        "description": "List of free slots",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving availability",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/list-groups": {
            "get": {
                "description": "Retrieves the list of all groups from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "List all groups",
                "responses": {
                    "200": {
                        "description": "List of groups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error listing groups",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/list-users": {
            "get": {
                "description": "Retrieves the list of all users from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "List all users",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error listing users",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/oauth2callback": {
            "get": {
                "description": "Handles the Google OAuth2 callback and stores the access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Handles OAuth2 callback",
                "responses": {
                    "200": {
                        "description": "Authorization successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error during OAuth2 callback",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/routes": {
            "get": {
                "description": "Defines all the routes and the associated handlers for the application.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Set up API routes for the application",
                "responses": {
                    "200": {
                        "description": "Routes set successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}